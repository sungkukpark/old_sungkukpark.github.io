{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/ttrl-vim-zalavim-operators/",
    "result": {"data":{"markdownRemark":{"html":"<p>본문에서는 Vim의 기본적인 명령어(commands)를 프로그래밍 언어의 연산자(operators)로 간주해 소개하도록 한다. 텍스트를 일종의 데이터라고 할 때 삽입, 삭제, 복사, 붙여넣기는 데이터를 가공하기 위한 가장 기초적인 연산자라고 볼 수 있다. h, j, k, l을 통한 기본 탐색 이외의 고급 탐색 명령어들은 일종의 탐색 연산자로 간주하고 다음 기회에 소개하도록 하겠다.</p>\n<h3>탐색(Navigation)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">      ^\r\n      k\r\n&lt; h       l >\r\n      j\r\n      v</code></pre></div>\n<p>위의 도표는 vimtutor에 수록된 내용으로서 Vim의 4방위를 담당하는 문자 h, j, k, l를 시각화한 것이다.\r\n<em>물론 처음부터 전혀 공감되지 않는다</em>. 키보드상의 h, j, k, l은 4방향이 아니라 한 줄로 있기 때문이다. 그러나 이것은 당신의 믿음이 부족한 것이다.</p>\n<h3>삽입(Insert)</h3>\n<p>Vim은 텍스트를 입력하는 다양한 명령어를 제공한다. 자주 쓰이는 6가지의 텍스트 입력 명령어는 다음과 같다:</p>\n<p><code class=\"language-text\">a</code>는 \"append\"의 첫 글자로 <strong>현재 커서(cursor) 바로 뒤에</strong> 텍스트를 덧붙인다(append). 예컨대, <code class=\"language-text\">pänzer</code>라는 텍스트에서 <code class=\"language-text\">ä</code> 위에 커서가 가있다고 하면, <code class=\"language-text\">ä</code>와 <code class=\"language-text\">n</code> 사이에 현재 커서를 뒤따르는 텍스트를 입력하게 되는 것이다.</p>\n<p><code class=\"language-text\">A</code> 명령어의 경우는 <strong>현재 줄의 맨 뒤에</strong> 텍스트를 덧붙인다. 소문자가 대문자로 바뀐 것만으로 \"덧붙인다\"는 의미를 공유하면서 다른 동작을 하는 점에 주목하기 바란다.</p>\n<p><code class=\"language-text\">i</code>는 \"insert\"의 첫 글자로 <strong>현재 커서 바로 앞에</strong> 텍스트를 삽입(insert)한다. 예컨대, <code class=\"language-text\">pänzer</code>라는 텍스트에서 <code class=\"language-text\">ä</code> 위에 커서가 가있다고 하면, <code class=\"language-text\">p</code>와 <code class=\"language-text\">ä</code> 사이에 현재 커서를 앞서는 텍스트를 입력하게 되는 것이다.</p>\n<p><code class=\"language-text\">I</code> 명령어의 경우는 <strong>현재 줄의 맨 앞에</strong> 텍스트를 덧붙인다.</p>\n<p><code class=\"language-text\">o</code>는 \"open\"의 첫 글자로 <strong>현재 줄 바로 뒤에 새로운 줄을 추가하고</strong> 텍스트를 덧붙인다.</p>\n<p><code class=\"language-text\">O</code>는 \"open\"의 첫 글자로 <strong>현재 줄 바로 앞에 새로운 줄을 추가하고</strong> 텍스트를 덧붙인다.</p>\n<h3>삭제(Deletion)</h3>\n<p><code class=\"language-text\">x</code>는 문자 하나를 삭제한다.</p>\n<p><code class=\"language-text\">dw</code>는 \"delete word\"의 약자로 <strong>현재 커서를 기준으로 그 다음 문자부터 하나의 단어에 해당하는</strong> 텍스트를 삭제한다.</p>\n<p><code class=\"language-text\">db</code>는 \"delete backward\"의 약자로 <strong>현재 커서를 기준으로 그 이전 문자부터 하나의 단어에 해당하는</strong> 텍스트를 삭제한다.</p>\n<p><code class=\"language-text\">dd</code>는 커서를 기준으로 한 줄 전체를 삭제한다.</p>\n<h3>복사(Copy)</h3>\n<p><code class=\"language-text\">yy</code>는 현재 줄 전체를 복사한다.</p>\n<h3>붙여넣기(Paste)</h3>\n<p><code class=\"language-text\">p</code>는 클립보드에 복사된 텍스트를 <strong>현재 커서를 기준으로 바로 뒤에</strong> 붙여넣는다.</p>\n<p><code class=\"language-text\">P</code>는 클립보드에 복사된 텍스트를 <strong>현재 커서를 기준으로 바로 앞에</strong> 붙여넣는다.</p>\n<blockquote>\n<p><strong>Tip:</strong> 대문자(upper letter)는 <strong>앞/전방(front)</strong>, 소문자(lower letter)는 **뒤/후방(back)**과 관련된 명령어라고 이해하자</p>\n</blockquote>","frontmatter":{"title":"[Vim] Vim잘라빔 3: Vim 연산자"},"excerpt":"본문에서는 Vim의 기본적인 명령어(commands)를 프로그래밍 언어의 연산자(operators…"}},"pageContext":{"slug":"/ttrl-vim-zalavim-operators/"}},
    "staticQueryHashes": ["3159585216","63159454"]}