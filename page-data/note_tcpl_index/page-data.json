{"componentChunkName":"component---src-templates-blog-post-js","path":"/note_tcpl_index/","result":{"data":{"markdownRemark":{"html":"<h2>Preface</h2>\n<p>Preface to the first edition</p>\n<h2>Chapter 1 - A Tutorial Introduction</h2>\n<p><a href=\"https://sungkukpark.github.io/note_tcpl_1_1_getting_started/\">1.1 Getting Started</a></p>\n<p>1.2 Variables and Arithmetic Expressions</p>\n<p>1.3 The for statement</p>\n<p>1.4 Symbolic Constants</p>\n<p>1.5 Character Input and Output</p>\n<p>1.5.1 File Copying</p>\n<p>1.5.2 Character Counting</p>\n<p>1.5.3 Line Counting</p>\n<p>1.5.4 Word Counting</p>\n<p>1.6 Arrays</p>\n<p>1.7 Functions</p>\n<p>1.8 Arguments - Call by Value</p>\n<p>1.9 Character Arrays</p>\n<p>1.10 External Variables and Scope</p>\n<h2>Chapter 2 - Types, Operators and Expressions</h2>\n<p>2.1 Variable Names</p>\n<p>2.2 Data Types and Sizes</p>\n<p>2.3 Constants</p>\n<p>2.4 Declarations</p>\n<p>2.5 Arithmetic Operators</p>\n<p>2.6 Relational and Logical Operators</p>\n<p>2.7 Type Conversions</p>\n<p>2.8 Increment and Decrement Operators</p>\n<p>2.9 Bitwise Operators</p>\n<p>2.10 Assignment Operators and Expressions</p>\n<p>2.11 Conditional Expressions</p>\n<p>2.12 Precedence and Order of Evaluation</p>\n<h2>Chapter 3 - Control Flow</h2>\n<p>3.1 Statements and Blocks</p>\n<p>3.2 If-Else</p>\n<p>3.3 Else-If</p>\n<p>3.4 Switch</p>\n<p>3.5 Loops - While and For</p>\n<p>3.6 Loops - Do-While</p>\n<p>3.7 Break and Continue</p>\n<p>3.8 Goto and labels</p>\n<h2>Chapter 4 - Functions and Program Structure</h2>\n<p>4.1 Basics of Functions</p>\n<p>4.2 Functions Returning Non-integers</p>\n<p>4.3 External Variables</p>\n<p>4.4 Scope Rules</p>\n<p>4.5 Header Files</p>\n<p>4.6 Static Variables</p>\n<p>4.7 Register Variables</p>\n<p>4.8 Block Structure</p>\n<p>4.9 Initialization</p>\n<p>4.10 Recursion</p>\n<p>4.11 The C Preprocessor</p>\n<p>4.11.1 File Inclusion</p>\n<p>4.11.2 Macro Substitution</p>\n<p>4.11.3 Conditional Inclusion</p>\n<h2>Chapter 5 - Pointers and Arrays</h2>\n<p>5.1 Pointers and Addresses</p>\n<p>5.2 Pointers and Function Arguments</p>\n<p>5.3 Pointers and Arrays</p>\n<p>5.4 Address Arithmetic</p>\n<p>5.5 Character Pointers and Functions</p>\n<p>5.6 Pointer Arrays; Pointers to Pointers</p>\n<p>5.7 Multi-dimensional Arrays</p>\n<p>5.8 Initialization of Pointer Arrays</p>\n<p>5.9 Pointers vs Multi-dimensional Arrays</p>\n<p>5.10 Command-line Arguments</p>\n<p>5.11 Pointers to Functions</p>\n<p>5.12 Complicated Declarations</p>\n<h2>Chapter 6 - Structures</h2>\n<p>6.1 Basics of Structures</p>\n<p>6.2 Structures and Functions</p>\n<p>6.3 Arrays of Structures</p>\n<p>6.4 Pointers to Structures</p>\n<p>6.5 Self-referential Structures</p>\n<p>6.6 Table Lookup</p>\n<p>6.7 Typedef</p>\n<p>6.8 Unions</p>\n<p>6.9 Bit-fields</p>\n<h2>Chapter 7 - Input and Output</h2>\n<p>7.1 Standard Input and Output</p>\n<p>7.2 Formatted Output - printf</p>\n<p>7.3 Variable-length Argument Lists</p>\n<p>7.4 Formatted Input - Scanf</p>\n<p>7.5 File Access</p>\n<p>7.6 Error Handling - Stderr and Exit</p>\n<p>7.7 Line Input and Output</p>\n<p>7.8 Miscellaneous Functions</p>\n<p>7.8.1 String Operations</p>\n<p>7.8.2 Character Class Testing and Conversion</p>\n<p>7.8.3 Ungetc</p>\n<p>7.8.4 Command Execution</p>\n<p>7.8.5 Storage Management</p>\n<p>7.8.6 Mathematical Functions</p>\n<p>7.8.7 Random Number generation</p>\n<h2>Chapter 8 - The UNIX System Interface</h2>\n<p>8.1 File Descriptors</p>\n<p>8.2 Low Level I/O - Read and Write</p>\n<p>8.3 Open, Creat, Close, Unlink</p>\n<p>8.4 Random Access - Lseek</p>\n<p>8.5 Example - An implementation of Fopen and Getc</p>\n<p>8.6 Example - Listing Directories</p>\n<p>8.7 Example - A Storage Allocator</p>\n<p>Appendix A - Reference Manual</p>\n<p>A.1 Introduction</p>\n<p>A.2 Lexical Conventions</p>\n<p>A.2.1 Tokens</p>\n<p>A.2.2 Comments</p>\n<p>A.2.3 Identifiers</p>\n<p>A.2.4 Keywords</p>\n<p>A.2.5 Constants</p>\n<p>A.2.6 String Literals</p>\n<p>A.3 Syntax Notation</p>\n<p>A.4 Meaning of Identifiers</p>\n<p>A.4.1 Storage Class</p>\n<p>A.4.2 Basic Types</p>\n<p>A.4.3 Derived types</p>\n<p>A.4.4 Type Qualifiers</p>\n<p>A.5 Objects and Lvalues</p>\n<p>A.6 Conversions</p>\n<p>A.6.1 Integral Promotion</p>\n<p>A.6.2 Integral Conversions</p>\n<p>A.6.3 Integer and Floating</p>\n<p>A.6.4 Floating Types</p>\n<p>A.6.5 Arithmetic Conversions</p>\n<p>A.6.6 Pointers and Integers</p>\n<p>A.6.7 Void</p>\n<p>A.6.8 Pointers to Void</p>\n<p>A.7 Expressions</p>\n<p>A.7.1 Pointer Conversion</p>\n<p>A.7.2 Primary Expressions</p>\n<p>A.7.3 Postfix Expressions</p>\n<p>A.7.4 Unary Operators</p>\n<p>A.7.5 Casts</p>\n<p>A.7.6 Multiplicative Operators</p>\n<p>A.7.7 Additive Operators</p>\n<p>A.7.8 Shift Operators</p>\n<p>A.7.9 Relational Operators</p>\n<p>A.7.10 Equality Operators</p>\n<p>A.7.11 Bitwise AND Operator</p>\n<p>A.7.12 Bitwise Exclusive OR Operator</p>\n<p>A.7.13 Bitwise Inclusive OR Operator</p>\n<p>A.7.14 Logical AND Operator</p>\n<p>A.7.15 Logical OR Operator</p>\n<p>A.7.16 Conditional Operator</p>\n<p>A.7.17 Assignment Expressions</p>\n<p>A.7.18 Comma Operator</p>\n<p>A.7.19 Constant Expressions</p>\n<p>A.8 Declarations</p>\n<p>A.8.1 Storage Class Specifiers</p>\n<p>A.8.2 Type Specifiers</p>\n<p>A.8.3 Structure and Union Declarations</p>\n<p>A.8.4 Enumerations</p>\n<p>A.8.5 Declarators</p>\n<p>A.8.6 Meaning of Declarators</p>\n<p>A.8.7 Initialization</p>\n<p>A.8.8 Type names</p>\n<p>A.8.9 Typedef</p>\n<p>A.8.10 Type Equivalence</p>\n<p>A.9 Statements</p>\n<p>A.9.1 Labeled Statements</p>\n<p>A.9.2 Expression Statement</p>\n<p>A.9.3 Compound Statement</p>\n<p>A.9.4 Selection Statements</p>\n<p>A.9.5 Iteration Statements</p>\n<p>A.9.6 Jump statements</p>\n<p>A.10 External Declarations</p>\n<p>A.10.1 Function Definitions</p>\n<p>A.10.2 External Declarations</p>\n<p>A.11 Scope and Linkage</p>\n<p>A.11.1 Lexical Scope</p>\n<p>A.11.2 Linkage</p>\n<p>A.12 Preprocessing</p>\n<p>A.12.1 Trigraph Sequences</p>\n<p>A.12.2 Line Splicing</p>\n<p>A.12.3 Macro Definition and Expansion</p>\n<p>A.12.4 File Inclusion</p>\n<p>A.12.5 Conditional Compilation</p>\n<p>A.12.6 Line Control</p>\n<p>A.12.7 Error Generation</p>\n<p>A.12.8 Pragmas</p>\n<p>A.12.9 Null directive</p>\n<p>A.12.10 Predefined names</p>\n<p>A.13 Grammar</p>\n<p>Appendix B - Standard Library</p>\n<p>B.1 Input and Output: <stdioh></p>\n<p>B.1.1 File Operations</p>\n<p>B.1.2 Formatted Output</p>\n<p>B.1.3 Formatted Input</p>\n<p>B.1.4 Character Input and Output Functions</p>\n<p>B.1.5 Direct Input and Output Functions</p>\n<p>B.1.6 File Positioning Functions</p>\n<p>B.1.7 Error Functions</p>\n<p>B.2 Character Class Tests: <ctypeh></p>\n<p>B.3 String Functions: <stringh></p>\n<p>B.4 Mathematical Functions: <mathh></p>\n<p>B.5 Utility Functions: <stdlibh></p>\n<p>B.6 Diagnostics: <asserth></p>\n<p>B.7 Variable Argument Lists: <stdargh></p>\n<p>B.8 Non-local Jumps: <setjmph></p>\n<p>B.9 Signals: <signalh></p>\n<p>B.10 Date and Time Functions: <timeh></p>\n<p>B.11 Implementation-defined Limits: <limitsh> and <floath></p>\n<p>Appendix C - Summary of Changes</p>","frontmatter":{"title":"[독서 노트] The C Programming Language 목차"},"excerpt":"Preface Preface to the first edition Chapter 1 - A Tutorial Introduction 1.1 Getting Started 1.2 Variables and Arithmetic Expressions 1.…"}},"pageContext":{"slug":"/note_tcpl_index/"}},"staticQueryHashes":["3159585216","63159454"]}