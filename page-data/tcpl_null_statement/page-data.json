{"componentChunkName":"component---src-templates-blog-post-js","path":"/tcpl_null_statement/","result":{"data":{"markdownRemark":{"html":"<p>C는 문법적으로 for 문의 경우에는 반드시 몸통 부분(body)을 갖도록 강제하고 있다[TCPL, p.18]. 만약 for 문에서 초기화(initialization), 반복 조건(condition), 몸통(body of the loop)이 모두 실행되고 나면, 더는 필요한 명령이 존재하지 않을 수 있다. 다음 예시 코드를 보자:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token comment\">/* count characters in input */</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 문자의 개수</span>\n    <span class=\"token keyword\">int</span> nc<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// getchar()가 개행 문자를 만날 때까지</span>\n    <span class=\"token comment\">// nc의 값을 1 증가시킨다</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span> nc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 모든 문자의 개수를 출력한다    </span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 코드에서 for 문은 주석으로 표시된 역할을 모두 수행하므로, 추가적인 명령은 불필요하다.\n그러나, 만약 여기서 코드를 컴파일한 뒤에 실행하게 되면 의도치 않은 결과를 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span> nc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 모든 문자의 개수를 출력한다    </span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>입력: test<br>\n결과: 0123</p>\n</blockquote>\n<p>이는 for 문이 그 다음 라인에 있는 printf(\"%d\", nc); 문장을 몸체(body)로 간주해서 그런 것이다.\n이때문에, 아무리 for 문이 그 자체로 충분하더라도, 위의 경우에는 세미콜론(';')을 작성해 빈 문장을 추가해줘야 한다.\n이처럼 어떤 명령도 포함하지 않되 ';'로 종료되어 그 자체로 문장으로 인식되는 문장을 **널 문(null statement)**이라 부른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span> nc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 모든 문자의 개수를 출력한다    </span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> nc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>입력: test<br>\n결과: 4</p>\n</blockquote>\n<p>물론 널 문은 다음 예시처럼 for 문 바로 뒤에 추가할 수도 있지만:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span> nc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>해당 문장이 별도의 문장으로서 기능한다는 것을 명시적으로 표시하기 위해 for 문 다음 줄에 추가하는 것을 권장한다.</p>\n<hr>\n<p>원문: <a href=\"https://www.cs.princeton.edu/~bwk/cbook.html\">The C Programming Language</a></p>","frontmatter":{"title":"[TCPL] 널 문(null statement)이란 무엇인가"},"excerpt":"C는 문법적으로 for 문의 경우에는 반드시 몸통 부분(body)을 갖도록 강제하고 있다[TCPL, p.18]. 만약 for 문에서 초기화(initialization), 반복 조건(condition), 몸통(body of the loop…"}},"pageContext":{"slug":"/tcpl_null_statement/"}},"staticQueryHashes":["3159585216","63159454"]}