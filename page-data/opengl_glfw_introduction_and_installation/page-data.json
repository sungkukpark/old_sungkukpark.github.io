{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/opengl_glfw_introduction_and_installation/",
    "result": {"data":{"markdownRemark":{"html":"<h2>GLFW 소개</h2>\n<p>GLFW는 오픈 소스 멀티플랫폼 라이브러리로서 데스크탑에서의 OpenGL, OpenGL ES, Vulkan 개발을 지원한다. GLFW는 창(windows), 컨텍스트(contexts), 서페이스(surfaces)를 생성하고 입력과 이벤트를 받는 간결한 API를 제공한다.</p>\n<p>GLFW는 C로 작성되었으며 윈도우, macOS, X11, 그리고 Wayland 운영 체제를 지원한다.</p>\n<h2>GLFW 설치</h2>\n<h3>윈도우의 경우</h3>\n<ol>\n<li>\n<p><a href=\"https://www.glfw.org/\">GLFW 공식 홈페이지</a>에서 GLFW를 다운로드 받는다.</p>\n</li>\n<li>\n<p>Visual Studio를 통해 새로운 프로젝트를 생성한 뒤 해당 GLFW 라이브러리의 <code class=\"language-text\">include</code> 폴더를 <code class=\"language-text\">C/C++ -> Additional Include Directories</code>에 추가한다.</p>\n</li>\n<li>\n<p>해당 GLFW의 라이브러리 파일을 <code class=\"language-text\">Configuration Properties -> Linker -> Input</code>에 추가한다.</p>\n</li>\n<li>\n<p>C++ 파일을 생성한 다음 <a href=\"https://www.glfw.org/documentation.html\">GLFW 튜토리얼 코드</a>를 복사해 붙여넣는다.</p>\n</li>\n<li>\n<p>Visual Studio를 통해 해당 프로젝트를 빌드하고 실행한다.</p>\n</li>\n</ol>\n<h2>Mac의 경우</h2>\n<ol>\n<li>다음 명령을 통해 Homebrew에서 GLFW를 설치한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">brew <span class=\"token function\">install</span> glfw</code></pre></div>\n<ol start=\"2\">\n<li>C++ 파일을 생성한 다음 <a href=\"https://www.glfw.org/documentation.html\">GLFW 튜토리얼 코드</a>를 복사해 붙여넣는다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">/* Ask for an OpenGL Core Context */</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">GLFW_INCLUDE_GLCOREARB</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLFW/glfw3.h></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">BUFFER_OFFSET</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  GLFWwindow<span class=\"token operator\">*</span> window<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Initialize the library */</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">glfwInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__APPLE__</span></span>\n  <span class=\"token comment\">/* We need to explicitly ask for a 3.2 context on OS X */</span>\n  <span class=\"token function\">glfwWindowHint</span> <span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MAJOR<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">glfwWindowHint</span> <span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MINOR<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">glfwWindowHint</span> <span class=\"token punctuation\">(</span>GLFW_OPENGL_FORWARD_COMPAT<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">glfwWindowHint</span> <span class=\"token punctuation\">(</span>GLFW_OPENGL_PROFILE<span class=\"token punctuation\">,</span> GLFW_OPENGL_CORE_PROFILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n\n  <span class=\"token comment\">/* Create a windowed mode window and its OpenGL context */</span>\n  window <span class=\"token operator\">=</span> <span class=\"token function\">glfwCreateWindow</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">720</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n     <span class=\"token function\">glfwTerminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/* Make the window's context current */</span>\n  <span class=\"token function\">glfwMakeContextCurrent</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Loop until the user closes the window */</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">glfwWindowShouldClose</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Render here */</span>\n    <span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clear the buffers</span>\n\n    <span class=\"token comment\">/* Swap front and back buffers */</span>\n    <span class=\"token function\">glfwSwapBuffers</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* Poll for and process events */</span>\n    <span class=\"token function\">glfwPollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">glfwTerminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>다음 명령을 통해 주어진 C++ 파일을 컴파일한다. <code class=\"language-text\">[/path/to/cpp/file]</code> 문자열은 컴파일할 C++ 파일의 경로로 대체한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">clang++ -std<span class=\"token operator\">=</span>c++11 -stdlib<span class=\"token operator\">=</span>libc++ -lglfw -framework CoreVideo -framework OpenGL -framework IOKit -framework Cocoa -framework Carbon <span class=\"token punctuation\">[</span>/path/to/cpp/file<span class=\"token punctuation\">]</span></code></pre></div>\n<ol start=\"4\">\n<li>터미널을 통해 컴파일된 <code class=\"language-text\">a.out</code> 파일을 실행한다.</li>\n</ol>\n<h2>참고 자료</h2>\n<ul>\n<li><a href=\"https://gist.github.com/v3n/27e810ac744b076ceeb7\">OpenGL Development on OS X</a></li>\n</ul>","frontmatter":{"title":"[OpenGL] GLWL 소개 및 설치 (윈도우와 Mac의 경우)"},"excerpt":"GLFW 소개 GLFW는 오픈 소스 멀티플랫폼 라이브러리로서 데스크탑에서의 OpenGL, OpenGL ES, Vulkan 개발을 지원한다. GLFW는 창(windows), 컨텍스트(contexts), 서페이스(surfaces…"}},"pageContext":{"slug":"/opengl_glfw_introduction_and_installation/"}},
    "staticQueryHashes": ["3159585216","63159454"]}