{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/c_tcpl_learning_progress/",
    "result": {"data":{"markdownRemark":{"html":"<h2>Preface</h2>\n<p>Preface to the first edition</p>\n<h2>Chapter 1 - A Tutorial Introduction</h2>\n<ul>\n<li><a href=\"https://sungkukpark.github.io/c_tcpl_1_1_getting_started/\">1.1 Getting Started</a></li>\n<li>1.2 Variables and Arithmetic Expressions</li>\n<li>1.3 The for statement</li>\n<li>1.4 Symbolic Constants</li>\n<li>1.5 Character Input and Output</li>\n<li>1.5.1 File Copying</li>\n<li>1.5.2 Character Counting</li>\n<li>1.5.3 Line Counting</li>\n<li>1.5.4 Word Counting</li>\n<li>1.6 Arrays</li>\n<li>1.7 Functions</li>\n<li>1.8 Arguments - Call by Value</li>\n<li>1.9 Character Arrays</li>\n<li>1.10 External Variables and Scope</li>\n</ul>\n<h2>Chapter 2 - Types, Operators and Expressions</h2>\n<ul>\n<li>2.1 Variable Names</li>\n<li>2.2 Data Types and Sizes</li>\n<li>2.3 Constants</li>\n<li>2.4 Declarations</li>\n<li>2.5 Arithmetic Operators</li>\n<li>2.6 Relational and Logical Operators</li>\n<li>2.7 Type Conversions</li>\n<li>2.8 Increment and Decrement Operators</li>\n<li>2.9 Bitwise Operators</li>\n<li>2.10 Assignment Operators and Expressions</li>\n<li>2.11 Conditional Expressions</li>\n<li>2.12 Precedence and Order of Evaluation</li>\n</ul>\n<h2>Chapter 3 - Control Flow</h2>\n<ul>\n<li>3.1 Statements and Blocks</li>\n<li>3.2 If-Else</li>\n<li>3.3 Else-If</li>\n<li>3.4 Switch</li>\n<li>3.5 Loops - While and For</li>\n<li>3.6 Loops - Do-While</li>\n<li>3.7 Break and Continue</li>\n<li>3.8 Goto and labels</li>\n</ul>\n<h2>Chapter 4 - Functions and Program Structure</h2>\n<ul>\n<li>4.1 Basics of Functions</li>\n<li>4.2 Functions Returning Non-integers</li>\n<li>4.3 External Variables</li>\n<li>4.4 Scope Rules</li>\n<li>4.5 Header Files</li>\n<li>4.6 Static Variables</li>\n<li>4.7 Register Variables</li>\n<li>4.8 Block Structure</li>\n<li>4.9 Initialization</li>\n<li>4.10 Recursion</li>\n<li>4.11 The C Preprocessor</li>\n<li>4.11.1 File Inclusion</li>\n<li>4.11.2 Macro Substitution</li>\n<li>4.11.3 Conditional Inclusion</li>\n</ul>\n<h2>Chapter 5 - Pointers and Arrays</h2>\n<ul>\n<li>5.1 Pointers and Addresses</li>\n<li>5.2 Pointers and Function Arguments</li>\n<li>5.3 Pointers and Arrays</li>\n<li>5.4 Address Arithmetic</li>\n<li>5.5 Character Pointers and Functions</li>\n<li>5.6 Pointer Arrays; Pointers to Pointers</li>\n<li>5.7 Multi-dimensional Arrays</li>\n<li>5.8 Initialization of Pointer Arrays</li>\n<li>5.9 Pointers vs Multi-dimensional Arrays</li>\n<li>5.10 Command-line Arguments</li>\n<li>5.11 Pointers to Functions</li>\n<li>5.12 Complicated Declarations</li>\n</ul>\n<h2>Chapter 6 - Structures</h2>\n<ul>\n<li>6.1 Basics of Structures</li>\n<li>6.2 Structures and Functions</li>\n<li>6.3 Arrays of Structures</li>\n<li>6.4 Pointers to Structures</li>\n<li>6.5 Self-referential Structures</li>\n<li>6.6 Table Lookup</li>\n<li>6.7 Typedef</li>\n<li>6.8 Unions</li>\n<li>6.9 Bit-fields</li>\n</ul>\n<h2>Chapter 7 - Input and Output</h2>\n<ul>\n<li>7.1 Standard Input and Output</li>\n<li>7.2 Formatted Output - printf</li>\n<li>7.3 Variable-length Argument Lists</li>\n<li>7.4 Formatted Input - Scanf</li>\n<li>7.5 File Access</li>\n<li>7.6 Error Handling - Stderr and Exit</li>\n<li>7.7 Line Input and Output</li>\n<li>7.8 Miscellaneous Functions</li>\n<li>7.8.1 String Operations</li>\n<li>7.8.2 Character Class Testing and Conversion</li>\n<li>7.8.3 Ungetc</li>\n<li>7.8.4 Command Execution</li>\n<li>7.8.5 Storage Management</li>\n<li>7.8.6 Mathematical Functions</li>\n<li>7.8.7 Random Number generation</li>\n</ul>\n<h2>Chapter 8 - The UNIX System Interface</h2>\n<ul>\n<li>8.1 File Descriptors</li>\n<li>8.2 Low Level I/O - Read and Write</li>\n<li>8.3 Open, Creat, Close, Unlink</li>\n<li>8.4 Random Access - Lseek</li>\n<li>8.5 Example - An implementation of Fopen and Getc</li>\n<li>8.6 Example - Listing Directories</li>\n<li>8.7 Example - A Storage Allocator</li>\n</ul>\n<h2>Appendix A - Reference Manual</h2>\n<ul>\n<li>A.1 Introduction</li>\n<li>A.2 Lexical Conventions</li>\n<li>A.2.1 Tokens</li>\n<li>A.2.2 Comments</li>\n<li>A.2.3 Identifiers</li>\n<li>A.2.4 Keywords</li>\n<li>A.2.5 Constants</li>\n<li>A.2.6 String Literals</li>\n<li>A.3 Syntax Notation</li>\n<li>A.4 Meaning of Identifiers</li>\n<li>A.4.1 Storage Class</li>\n<li>A.4.2 Basic Types</li>\n<li>A.4.3 Derived types</li>\n<li>A.4.4 Type Qualifiers</li>\n<li>A.5 Objects and Lvalues</li>\n<li>A.6 Conversions</li>\n<li>A.6.1 Integral Promotion</li>\n<li>A.6.2 Integral Conversions</li>\n<li>A.6.3 Integer and Floating</li>\n<li>A.6.4 Floating Types</li>\n<li>A.6.5 Arithmetic Conversions</li>\n<li>A.6.6 Pointers and Integers</li>\n<li>A.6.7 Void</li>\n<li>A.6.8 Pointers to Void</li>\n<li>A.7 Expressions</li>\n<li>A.7.1 Pointer Conversion</li>\n<li>A.7.2 Primary Expressions</li>\n<li>A.7.3 Postfix Expressions</li>\n<li>A.7.4 Unary Operators</li>\n<li>A.7.5 Casts</li>\n<li>A.7.6 Multiplicative Operators</li>\n<li>A.7.7 Additive Operators</li>\n<li>A.7.8 Shift Operators</li>\n<li>A.7.9 Relational Operators</li>\n<li>A.7.10 Equality Operators</li>\n<li>A.7.11 Bitwise AND Operator</li>\n<li>A.7.12 Bitwise Exclusive OR Operator</li>\n<li>A.7.13 Bitwise Inclusive OR Operator</li>\n<li>A.7.14 Logical AND Operator</li>\n<li>A.7.15 Logical OR Operator</li>\n<li>A.7.16 Conditional Operator</li>\n<li>A.7.17 Assignment Expressions</li>\n<li>A.7.18 Comma Operator</li>\n<li>A.7.19 Constant Expressions</li>\n<li>A.8 Declarations</li>\n<li>A.8.1 Storage Class Specifiers</li>\n<li>A.8.2 Type Specifiers</li>\n<li>A.8.3 Structure and Union Declarations</li>\n<li>A.8.4 Enumerations</li>\n<li>A.8.5 Declarators</li>\n<li>A.8.6 Meaning of Declarators</li>\n<li>A.8.7 Initialization</li>\n<li>A.8.8 Type names</li>\n<li>A.8.9 Typedef</li>\n<li>A.8.10 Type Equivalence</li>\n<li>A.9 Statements</li>\n<li>A.9.1 Labeled Statements</li>\n<li>A.9.2 Expression Statement</li>\n<li>A.9.3 Compound Statement</li>\n<li>A.9.4 Selection Statements</li>\n<li>A.9.5 Iteration Statements</li>\n<li>A.9.6 Jump statements</li>\n<li>A.10 External Declarations</li>\n<li>A.10.1 Function Definitions</li>\n<li>A.10.2 External Declarations</li>\n<li>A.11 Scope and Linkage</li>\n<li>A.11.1 Lexical Scope</li>\n<li>A.11.2 Linkage</li>\n<li>A.12 Preprocessing</li>\n<li>A.12.1 Trigraph Sequences</li>\n<li>A.12.2 Line Splicing</li>\n<li>A.12.3 Macro Definition and Expansion</li>\n<li>A.12.4 File Inclusion</li>\n<li>A.12.5 Conditional Compilation</li>\n<li>A.12.6 Line Control</li>\n<li>A.12.7 Error Generation</li>\n<li>A.12.8 Pragmas</li>\n<li>A.12.9 Null directive</li>\n<li>A.12.10 Predefined names</li>\n<li>A.13 Grammar</li>\n</ul>\n<h2>Appendix B - Standard Library</h2>\n<ul>\n<li>B.1 Input and Output: <stdioh></li>\n<li>B.1.1 File Operations</li>\n<li>B.1.2 Formatted Output</li>\n<li>B.1.3 Formatted Input</li>\n<li>B.1.4 Character Input and Output Functions</li>\n<li>B.1.5 Direct Input and Output Functions</li>\n<li>B.1.6 File Positioning Functions</li>\n<li>B.1.7 Error Functions</li>\n<li>B.2 Character Class Tests: <ctypeh></li>\n<li>B.3 String Functions: <stringh></li>\n<li>B.4 Mathematical Functions: <mathh></li>\n<li>B.5 Utility Functions: <stdlibh></li>\n<li>B.6 Diagnostics: <asserth></li>\n<li>B.7 Variable Argument Lists: <stdargh></li>\n<li>B.8 Non-local Jumps: <setjmph></li>\n<li>B.9 Signals: <signalh></li>\n<li>B.10 Date and Time Functions: <timeh></li>\n<li>B.11 Implementation-defined Limits: <limitsh> and <floath></li>\n</ul>\n<h2>Appendix C - Summary of Changes</h2>","frontmatter":{"title":"[C] The C Programming Language 학습 진도"},"excerpt":"Preface Preface to the first edition Chapter 1 - A Tutorial Introduction 1.1 Getting Started 1.2 Variables and Arithmetic Expressions 1.…"}},"pageContext":{"slug":"/c_tcpl_learning_progress/"}},
    "staticQueryHashes": ["3159585216","63159454"]}