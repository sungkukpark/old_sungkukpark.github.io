{"componentChunkName":"component---src-templates-blog-post-js","path":"/unity_how_to_add_animation_events_dynamically/","result":{"data":{"markdownRemark":{"html":"<h2>애니메이션 이벤트(AnimationEvent)란?</h2>\n<p>애니메이션 이벤트(<a href=\"https://docs.unity3d.com/ScriptReference/AnimationEvent.html\">AnimationEvent</a>)는 GameObject.SendMessage 메서드와 유사한 방식으로 애니메이션이 재생되는 동안 스크립트 함수를 호출하는 이벤트이다.</p>\n<p>AnimationEvent는 인자 0..1개를 취한다. 인자는 float, int, string, object 또는 또 다른 AnimationEvent 타입의 인자를 취할 수 있다.</p>\n<h2>AnimationEvent 동적으로 추가하기</h2>\n<p>애니메이션 이벤트는 <a href=\"https://docs.unity3d.com/ScriptReference/AnimationClip.AddEvent.html\">AnimationClip.AddEvent</a> 메서드를 통해 동적으로 애니메이션 클립(AnimationClip) 인스턴스에 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// Animator를 가지고 있는 GameObject에 여러 개의 AnimationEvent를 동적으로 추가하는 샘플 코드</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AddEventExample</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> anim <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Animator<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clip <span class=\"token operator\">=</span> anim<span class=\"token punctuation\">.</span>runtimeAnimatorController<span class=\"token punctuation\">.</span>animationClips<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 주어진 객체의 애니메이션이 2초 지속된다고 가정할 때,</span>\n        <span class=\"token comment\">// 0.5초 시점에 AnimationEvent로 전달된 int형 인자값을 출력하는 이벤트 추가</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> evt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AnimationEvent</span>\n        <span class=\"token punctuation\">{</span>\n            intParameter <span class=\"token operator\">=</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">,</span>\n            time <span class=\"token operator\">=</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 이벤트를 통해 호출할 함수명 1</span>\n            functionName <span class=\"token operator\">=</span> <span class=\"token string\">\"PrintInt\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 주어진 객체의 애니메이션이 2초 지속된다고 가정할 때,</span>\n        <span class=\"token comment\">// 1.5초 시점에 AnimationEvent로 전달된 string형 인자값을 출력하는 이벤트 추가</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> evt2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AnimationEvent</span>\n        <span class=\"token punctuation\">{</span>\n            stringParameter <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n            time <span class=\"token operator\">=</span> <span class=\"token number\">1.5f</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 이벤트를 통해 호출할 함수명 2</span>\n            functionName <span class=\"token operator\">=</span> <span class=\"token string\">\"PrintStr\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        clip<span class=\"token punctuation\">.</span><span class=\"token function\">AddEvent</span><span class=\"token punctuation\">(</span>evt1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        clip<span class=\"token punctuation\">.</span><span class=\"token function\">AddEvent</span><span class=\"token punctuation\">(</span>evt2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 이벤트를 통해 호출될 함수 1</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrintInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PrintInt: \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" called at: \"</span> <span class=\"token operator\">+</span> Time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// 이벤트를 통해 호출될 함수 2</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrintStr</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PrintStr: \"</span> <span class=\"token operator\">+</span> str <span class=\"token operator\">+</span> <span class=\"token string\">\" called at: \"</span> <span class=\"token operator\">+</span> Time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>AnimationEvent를 정적으로 추가하기</h2>\n<p>위에서 알아본 AddEvent 메서드는 애니메이션 이벤트를 동적으로 추가한다. 여기서 AddEvent로 추가된 AnimationEvent는 플레이 모드가 종료되는 경우에 사라지게 된다. 해당 클립에 추가한 이벤트의 영속성(persistence)을 유지하기 위해서는 유니티 에디터 내에서 <a href=\"https://docs.unity3d.com/ScriptReference/AnimationUtility.SetAnimationEvents.html\">AnimationUtility.SetAnimationEvents</a> 메서드를 호출하도록 한다.</p>\n<p>요컨대, AnimationEvent를 동적으로 추가할 때는 <a href=\"https://docs.unity3d.com/ScriptReference/AnimationClip.AddEvent.html\">AnimationClip.AddEvent</a>, 그게 아니라 유니티 에니터 내에서 정적으로 추가할 때에는 <a href=\"https://docs.unity3d.com/ScriptReference/AnimationUtility.SetAnimationEvents.html\">AnimationUtility.SetAnimationEvents</a>를 활용하도록 한다.</p>","frontmatter":{"title":"[Unity] 애니메이션 이벤트(AnimationEvent) 동적으로 추가하기"},"excerpt":"애니메이션 이벤트(AnimationEvent)란? 애니메이션 이벤트(AnimationEvent)는 GameObject.SendMessage…"}},"pageContext":{"slug":"/unity_how_to_add_animation_events_dynamically/"}},"staticQueryHashes":["3159585216","63159454"]}