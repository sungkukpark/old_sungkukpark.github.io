{"componentChunkName":"component---src-templates-blog-post-js","path":"/python_references/","result":{"data":{"markdownRemark":{"html":"<p>이 페이지는 특정 자료에 대한 링크를 불필요하게 나열하지 않을 것이다. Python 3를 배우는 자료는 온라인에 이미 흔해 빠졌다. 프로그래밍 스킬에 맞는 아무 교육 자료나 선택하면 된다.</p>\n<p><a href=\"https://diveintopython3.net/\">Dive Into Python 3</a>는 아래의 모든 토픽을 커버하는 무료 온라인 책이다. 만약 이 중에 이 책이 커버하지 않는 주제가 있다면 간단한 구글 검색 한 번으로도 찾을 수 있다.</p>\n<h2>기초(Basics)</h2>\n<ol>\n<li>Python 개발을 위해 비주얼 스투디오 코드를 설치하는 방법</li>\n<li>변수와 데이터 타입</li>\n<li>문자열</li>\n<li>리스트, 세트, 튜플</li>\n<li>딕셔너리</li>\n<li>객체(Objects)</li>\n<li>조건문</li>\n<li>루프</li>\n<li>함수</li>\n<li>클래스</li>\n<li>파일 입출력</li>\n<li>Json</li>\n<li>객체-지향 프로그래밍: 데이터 추상화, 캡슐화, 상속 및 다형성</li>\n</ol>\n<p>만약 프로그래밍 경험이 있다면 위의 모든 것을 배우는데 <strong>1주</strong>면 충분할 것이다.\n만약 프로그래밍 경험이 없다면 위의 것들을 배우는데 <strong>2-3</strong>주 정도 걸릴 것이다.</p>\n<h2>중급(Intermediate)</h2>\n<ol>\n<li>파이썬 파일, 모듈, 라이브러리</li>\n<li>PIP (Package installer for Python)와 PyPi.org</li>\n<li>Import문과 어떻게 다른 파일에서 다른 파일에 접근하는지에 대하여</li>\n<li>파이썬 표준 라이브러리 모듈</li>\n<li>가상 환경 (vEnv)</li>\n<li>유닛 테스팅 (PyTest)</li>\n</ol>\n<p>유닛 테스팅을 제외한 다섯 주제는 유닛 테스트보다 더 우선시되어야 하는데 이는 버그를 고치거나 기존 애드온이나 도구를 추가하는 등의 업무를 시작할 수 있기 때문이다.</p>\n<p>이 다섯 주제를 배우는데 약 1주에서 최대 2주의 시간이 걸릴 거이다. 유닛 테스팅은 그 자체로 유닛 테스팅 내부의 요소들을 이해해야 하기 때문에 1주라는 시간을 별도로 할애해야 할 수도 있다.</p>\n<p>이 정도의 지식을 갖추게 되면 이 지식을 Blender와 같은 DCC 스크립팅 환경에 적용할 수 있게 된다.</p>\n<p>파이썬에 대해 더 많이 알고 싶으면 데코레이터(decorators)를 알아보기를 추천한다. 데코레이터는 반복되는 기능을 여러 함수들에 사용하는데 유용하다.</p>\n<h2>고급(Advanced)</h2>\n<ol>\n<li>파이써닉(Pythonic)한 코드와 문법(syntax)</li>\n<li>PySide / PyQT UI 개발</li>\n</ol>\n<ul>\n<li><strong>경고</strong>: 이는 Blender와 함께 쓰이게는 매우 까다롭다. 다른 DCC부터 시작하는 것이 이 주제를 공부하기에 더 용이하다.</li>\n</ul>\n<ol start=\"3\">\n<li>디자인 패턴 (파이썬)</li>\n<li>자료 구조 (파이썬)</li>\n<li>소켓 프로그래밍</li>\n<li>데이터베이스 프로그래밍</li>\n<li>웹 서버 / 개발 프로그래밍</li>\n</ol>\n<p>이 주제는 한 주제마다 1주 이상의 시간이 걸릴 수 있다. 따라서 서두르지 말고 기초와 중급 주제들을 모두 익힐 때까지 이를 미루도록 한다.</p>\n<h2>블렌더(Blender)</h2>\n<p>VSCode를 <a href=\"https://marketplace.visualstudio.com/items?itemName=JacquesLucke.blender-development\">Blender Development</a> 확장과 함께 쓰는 것은 블렌더 애드온을 통한 개발과 디버깅을 편하게 해준다. 이 확장을 제대로만 설정하면 블렌더 에드온 개발을 <strong>너무너무</strong> 손쉽게 만들어주기 때문에 강력하게 추천한다.</p>\n<p>원하는 기능을 만들기 위해서는 <a href=\"https://docs.blender.org/api/current/index.html\">Blender 3.2 Python API Documentation — Blender Python API</a>를 참조하도록 한다.</p>\n<p>유료로 제공되는 <a href=\"https://studio.blender.org/\">Blender Studio</a>는 <a href=\"https://studio.blender.org/training/scripting-for-artists/\">Scripting for Artists</a>라는 강의를 통해 블렌더에서 어떻게 애드온을 추가하는지 알려준다. 이 강의의 상당 부분은 <a href=\"https://www.youtube.com/playlist?list=PL1fkRtMmJ4OOrY20bOVlxn_PFYx9ly97j\">유투브로도 공개</a>되어 있다.</p>\n<p>블렌더 애드온을 추가하는 또 다른 멋진 장소는 <a href=\"https://github.com/search?l=Python&#x26;q=bpy\">GitHub</a>이다. Python으로 작성된 bpy라는 이름의 저장소들을 검색(<code class=\"language-text\">?l=Python&amp;q=bpy</code>)하면 된다. 오래 되어 지원되지 않는 API에 통수를 맞지 않으려면 해당 애드온이 어떤 Blender 버전을 사용하는지만 확인하면 된다. 블렌더는 끊임없이 API를 갱신하고 변경하기 때문이다.</p>\n<p>하지만 역시 블렌더 스크립팅을 배우는 최고의 방법은 블렌더로 실용적인 뭔가를 해보는 것이다. 구글링을 하면 여타 많은 자료를 찾을 수야 있겠지만, 각 코드와 API가 무엇을 하는지 시간을 들여서 정확하게 이해하는 것이 아무 생각 없이 코드 복사/붙여넣기를 하는 것보다 상책이다.</p>\n<h2>강의</h2>\n<ul>\n<li><a href=\"https://pythonprinciples.com/lessons/\">Interactive Python Lessons - Python Principles</a></li>\n</ul>\n<h2>라이브러리</h2>\n<h3>Matplotlib</h3>\n<ul>\n<li><a href=\"https://matplotlib.org/stable/gallery/index.html\">Matplotlib gallery</a></li>\n</ul>\n<h3>libigl</h3>\n<ul>\n<li><a href=\"https://libigl.github.io/tutorial/\">Tutorial - libigl</a></li>\n</ul>","frontmatter":{"title":"[Python] 파이썬 레퍼런스 모음"},"excerpt":"이 페이지는 특정 자료에 대한 링크를 불필요하게 나열하지 않을 것이다. Python 3를 배우는 자료는 온라인에 이미 흔해 빠졌다. 프로그래밍 스킬에 맞는 아무 교육 자료나 선택하면 된다. Dive Into Python…"}},"pageContext":{"slug":"/python_references/"}},"staticQueryHashes":["3159585216","63159454"]}